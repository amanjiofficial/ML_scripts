const express = require('express');
const router = express.Router();
const User=require('../models/User');
const bodyParser = require('body-parser');
const bcrypt = require('bcryptjs');
const passport = require('passport');

const urlencodedParser = bodyParser.urlencoded({extended:false});
router.get('/login',(req,res) => {
    res.render('login');
});

router.get('/register',(req,res) => {
    res.render('register');
});

//Reciving post data (form data) for register
router.post('/register',urlencodedParser,(req,res) => {
    const {uname, fullname, email, phonenumber, password, confpassword}=req.body;
    User.findOne({ where:{ username: uname }}).then(function (user) {
        if(user){
            console.log("user already registered");
            res.render('register', {
                uname, fullname,email,phonenumber,password, confpassword
            });  
        }else{
            const newUser=new User({
                username: uname,
                name: fullname,
                 email:email,
                 phnumber:phonenumber,
                 password:password
             });
             bcrypt.genSalt(10, (err, salt) => {
                 bcrypt.hash(newUser.password, salt, (err,hash) => {
                     if(err) throw err;
                     newUser.password=hash;
                     newUser.save()
                     .then(user => {
                         console.log('Registered Successfully');
                         res.redirect('/users/login');
                     })
                 })
             })
        }
    })
});


//Login Handle
router.post('/login', (req,res,next) => {
    passport.authenticate('local',{
      successRedirect: '/dashboard',
      failureRedirect: '/users/login',
      failureFlash: true
    })(req,res,next);
  });

  router.post('/ctfadminlogin', (req,res,next) => {
    passport.authenticate('local',{
      successRedirect: '/admindashboard',
      failureRedirect: '/users/ctfadminlogin',
      failureFlash: true
    })(req,res,next);
  });
  
//LogOut Handle
router.get('/logout', (req,res) => {
    req.logout();
    res.redirect('/users/login');
});
module.exports=router;








